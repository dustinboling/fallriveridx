fallriver IDX - TODO

#19 - test api controllers. rigorously.
#30 - set up batsd client interface 
#35 - logger: a property#search that returns 0 results should not record a fail. it should record success.count=0 or something to that effect.
#36 - logger: consider adding the params requested back in 
#37 - logger: implement rails notifications 
#38 - signups (stripe)
#39 - subscriptions (stripe)

COMPLETED
#1 - write Property seed task
#2 - write ActiveAgent seed task
#18 - add broker/office to property search
#7 - json api @ fallriveridx.com/api/listings/ ... api/agents/
#10 - better error messages in api/properties/invalid_parameters
#17 - figure out how to add limit in to the api (maybe check for its presence and add it as a first term)
#14 - indexes for database (save for last, learn from postgres documentation: it's good.)
#9 - make sure there are no admin people in the Agent table
#21 - drop brokers table
#11 - log api requests
#12 - log logins fail/success
#13 - log ip addresses from which api requests are made
#15 - get all the necessary Property fields into the RABL template
#16 - see if its faster to not extend the show action (RABL)
#22 - add streetview link to InfoWindow for maps
#23 - fix search.json public remarks (works local, not on heroku)
#24 - make sure that we are actually getting all historical datas
#25 - index ListingID on listings and property_media
#26 - make sure indexes were pushed to heroku 
#8 - finish loading all properties to database, push to heroku
#32 - API: add pagination
#27 - lock down ALL controller actions or there will be no current_user object to tie into the batsd implementation
#34 - performance tune database (analayze, reindex, repeat)


TO TEST
#4 - write Property update task
#5 - write Agent update task

MAYBE
#29 - need some kind of scaling to run automatically for long queries (i.e. start up an additional dyno when a query takes too long)
#20 - move acceptable params constant into properties, move acceptable params function into properties_helper
#40 - queries are too slow when using paginate_array on an array > 400

CANCELLED
#2.1 - separate ActiveAgent fields into broker/agent
  - rets database was too inconsistent
#6 - devise authentication with token authenticable module support for json queries
  - using custom solution
#28 - upgrade to 3.2, then run explain on everything, make sure an index is used on all functions
  - too time consuming, just doing live.
#31 - FIREFOX Bug with chosen: in the odd chance that an enduser clicks refresh, the cities they have selected will be duplicated
#33 - remove all instances of rabl. remove rabl gem. too slow for so many records json.erb is faster. (rabl is fine for single files)
